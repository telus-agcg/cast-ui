version: 2

references:
  image_npm: &image_node node:16-alpine
  cache_key_npm: &cache_key_npm v2-npm-{{ checksum "package-lock.json" }}
  cache_key_backup_npm: &cache_key_backup_npm v2-npm-
  cache_path_npm: &cache_path_npm /usr/src/app/node_modules
  restore_cache_npm: &restore_cache_npm
    restore_cache:
      keys:
        - *cache_key_npm
        - *cache_key_backup_npm
  cache_key_git: &cache_key_git v2-git-{{ .Environment.CIRCLE_SHA1 }}
  cache_key_backup_git: &cache_key_backup_git v2-git-
  cache_path_git: &cache_path_git /usr/src/app
  restore_cache_git: &restore_cache_git
    restore_cache:
      keys:
        - *cache_key_git
        - *cache_key_backup_git

jobs:
  checkout_code:
    docker:
      - image: *image_node
    working_directory: /usr/src/app
    steps:
      - *restore_cache_git
      - checkout
      - run:
          name: Set npmrc
          command: echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc
      - save_cache:
          key: *cache_key_git
          paths:
            - *cache_path_git

  build_lint:
    docker:
      - image: *image_node
    working_directory: /usr/src/app
    steps:
      - *restore_cache_git
      - run:
          name: Run npm install
          command: npm install
      - run:
          name: Run npm build
          command: npm run build
      - run:
          name: Run npm linting
          command: npm run lint
      - save_cache:
          key: *cache_key_npm
          paths:
            - *cache_path_npm

  build_deploy:
    docker:
      - image: *image_node
    working_directory: /usr/src/app
    steps:
      - *restore_cache_git
      - *restore_cache_npm
      - run:
          name: Run npm build
          command: npm run build
      - run:
          name: Semantic Release
          command: npm run semantic-release
      - run:
          name: Publish Storybook
          command: npm run deploy-storybook

workflows:
  version: 2
  lint_and_deploy:
    jobs:
      - checkout_code
      - build_lint:
          requires:
            - checkout_code
          filters:
            branches:
              ignore: /(^gh-pages)/
      - build_deploy:
          requires:
            - build_lint
          filters:
            branches:
              only: /(^master|^beta)/